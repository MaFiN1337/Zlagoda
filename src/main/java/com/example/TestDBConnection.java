package com.example;

import java.sql.*;
import java.util.Properties;
import java.io.InputStream;

public class TestDBConnection {

    public static void main(String[] args) {
        System.out.println("=== –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î Zlagoda ===\n");

        // –¢–µ—Å—Ç 1: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ properties —Ñ–∞–π–ª
        testConnectionFromProperties();

        // –¢–µ—Å—Ç 2: –ü—Ä—è–º–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        testDirectConnection();

        // –¢–µ—Å—Ç 3: –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î
        showDatabaseStructure();

        // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ (—è–∫—â–æ —î —Ç–∞–±–ª–∏—Ü—ñ)
        testSampleData();
    }

    private static void testConnectionFromProperties() {
        System.out.println("--- –¢–µ—Å—Ç 1: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ dbProperties ---");

        try (InputStream input = TestDBConnection.class.getClassLoader()
                .getResourceAsStream("db.properties")) {

            if (input == null) {
                System.out.println("‚ùå –§–∞–π–ª dbProperties –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ classpath");
                return;
            }

            Properties props = new Properties();
            props.load(input);

            String url = props.getProperty("url");
            String user = props.getProperty("user");
            String password = props.getProperty("password");

            System.out.println("URL: " + url);
            System.out.println("User: " + user);

            try (Connection conn = DriverManager.getConnection(url, user, password)) {
                System.out.println("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ properties —É—Å–ø—ñ—à–Ω–µ!");
                System.out.println("Database: " + conn.getCatalog());
                System.out.println("Driver: " + conn.getMetaData().getDriverName());
            }

        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ properties: " + e.getMessage());
        }
        System.out.println();
    }

    private static void testDirectConnection() {
        System.out.println("--- –¢–µ—Å—Ç 2: –ü—Ä—è–º–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è ---");

        String url = "jdbc:mysql://localhost:3306/zlagoda?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8";
        String user = "root";
        String password = "MaFiN22813376611";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            try (Connection conn = DriverManager.getConnection(url, user, password)) {
                System.out.println("‚úÖ –ü—Ä—è–º–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!");

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ—Ä—Å—ñ—é MySQL
                try (Statement stmt = conn.createStatement();
                     ResultSet rs = stmt.executeQuery("SELECT VERSION()")) {

                    if (rs.next()) {
                        System.out.println("MySQL –≤–µ—Ä—Å—ñ—è: " + rs.getString(1));
                    }
                }

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–¥—É–≤–∞–Ω–Ω—è
                try (Statement stmt = conn.createStatement();
                     ResultSet rs = stmt.executeQuery("SHOW VARIABLES LIKE 'character_set_database'")) {

                    if (rs.next()) {
                        System.out.println("–ö–æ–¥—É–≤–∞–Ω–Ω—è –ë–î: " + rs.getString(2));
                    }
                }
            }

        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: " + e.getMessage());
        }
        System.out.println();
    }

    private static void showDatabaseStructure() {
        System.out.println("--- –¢–µ—Å—Ç 3: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î ---");

        String url = "jdbc:mysql://localhost:3306/zlagoda?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8";
        String user = "root";
        String password = "MaFiN22813376611";

        try (Connection conn = DriverManager.getConnection(url, user, password)) {

            DatabaseMetaData metaData = conn.getMetaData();

            // –ü–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ
            System.out.println("–¢–∞–±–ª–∏—Ü—ñ –≤ –ë–î:");
            try (ResultSet tables = metaData.getTables("zlagoda", null, "%", new String[]{"TABLE"})) {
                boolean hasTablesFound = false;
                while (tables.next()) {
                    hasTablesFound = true;
                    String tableName = tables.getString("TABLE_NAME");
                    System.out.println("  üìã " + tableName);
                }

                if (!hasTablesFound) {
                    System.out.println("  ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
                }
            }

        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ë–î: " + e.getMessage());
        }
        System.out.println();
    }

    private static void testSampleData() {
        System.out.println("--- –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ ---");

        String url = "jdbc:mysql://localhost:3306/zlagoda?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8";
        String user = "root";
        String password = "MaFiN22813376611";

        // –°–ø–∏—Å–æ–∫ –º–æ–∂–ª–∏–≤–∏—Ö —Ç–∞–±–ª–∏—Ü—å –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        String[] possibleTables = {"category", "categories", "product", "products",
                "employee", "employees", "customer", "customers"};

        try (Connection conn = DriverManager.getConnection(url, user, password)) {

            for (String tableName : possibleTables) {
                try (Statement stmt = conn.createStatement()) {

                    // –°–ø—Ä–æ–±—É—î–º–æ –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—ñ
                    ResultSet rs = stmt.executeQuery("SELECT COUNT(*) FROM " + tableName);
                    if (rs.next()) {
                        int count = rs.getInt(1);
                        System.out.println("üìä –¢–∞–±–ª–∏—Ü—è '" + tableName + "': " + count + " –∑–∞–ø–∏—Å—ñ–≤");

                        // –Ø–∫—â–æ —î –∑–∞–ø–∏—Å–∏, –ø–æ–∫–∞–∂–µ–º–æ –ø–µ—Ä—à—ñ 3
                        if (count > 0) {
                            try (ResultSet dataRs = stmt.executeQuery("SELECT * FROM " + tableName + " LIMIT 3")) {
                                ResultSetMetaData metaData = dataRs.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                System.out.println("   –ü–µ—Ä—à—ñ –∑–∞–ø–∏—Å–∏:");
                                while (dataRs.next()) {
                                    StringBuilder row = new StringBuilder("   ");
                                    for (int i = 1; i <= columnCount; i++) {
                                        if (i > 1) row.append(" | ");
                                        row.append(metaData.getColumnName(i)).append(": ");
                                        row.append(dataRs.getString(i));
                                    }
                                    System.out.println(row.toString());
                                }
                            }
                        }
                    }

                } catch (SQLException e) {
                    // –¢–∞–±–ª–∏—Ü—è –Ω–µ —ñ—Å–Ω—É—î, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
                }
            }

        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö: " + e.getMessage());
        }

        System.out.println("\n=== –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===");
    }
}
